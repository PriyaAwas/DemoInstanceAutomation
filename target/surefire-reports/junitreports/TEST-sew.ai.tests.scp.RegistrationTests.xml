<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="USZYBGH1MU" failures="0" tests="19" name="sew.ai.tests.scp.RegistrationTests" time="-1697015552.000" errors="1" timestamp="2023-10-11T14:41:25 IST" skipped="18">
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="classPreRequisites" time="-1697015552.000">
    <error message="
Parameter &#039;platformType&#039; is required by BeforeClass on method classPreRequisites but has not been marked @Optional or defined
" type="org.testng.TestNGException">
      <![CDATA[org.testng.TestNGException: 
Parameter 'platformType' is required by BeforeClass on method classPreRequisites but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:277)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:180)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
    </error>
  </testcase> <!-- classPreRequisites -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyRegistrationPageObjects" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegistrationPageObjects -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyEmailFieldValidation" time="0.000">
    <skipped/>
  </testcase> <!-- verifyEmailFieldValidation -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyRegByOptingBothPreferences" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegByOptingBothPreferences -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyPasswordFieldValidations" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordFieldValidations -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyMultipleAccountsAfterCommercialRegistration" time="0.000">
    <skipped/>
  </testcase> <!-- verifyMultipleAccountsAfterCommercialRegistration -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyRegByInActiveAccount" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegByInActiveAccount -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyFieldValidationsResidentialTemp" time="0.000">
    <skipped/>
  </testcase> <!-- verifyFieldValidationsResidentialTemp -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyPasswordMismatch" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordMismatch -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyRegByOptingPaperLessPref" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegByOptingPaperLessPref -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyResidentialRegistrationCommercialTemp" time="0.000">
    <skipped/>
  </testcase> <!-- verifyResidentialRegistrationCommercialTemp -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyFieldValidationsCommercialTemp" time="0.000">
    <skipped/>
  </testcase> <!-- verifyFieldValidationsCommercialTemp -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyCommercialRegistrationResidentialTemp" time="0.000">
    <skipped/>
  </testcase> <!-- verifyCommercialRegistrationResidentialTemp -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyRegByOptingPaperBillPref" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegByOptingPaperBillPref -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyTabOrderForRegForm" time="0.000">
    <skipped/>
  </testcase> <!-- verifyTabOrderForRegForm -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyFieldNotRetainValuesOnRegFail" time="0.000">
    <skipped/>
  </testcase> <!-- verifyFieldNotRetainValuesOnRegFail -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyRegistrationTemplate" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegistrationTemplate -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyMultipleAccountsAfterResidentialRegistration" time="0.000">
    <skipped/>
  </testcase> <!-- verifyMultipleAccountsAfterResidentialRegistration -->
  <system-out/>
  <testcase classname="sew.ai.tests.scp.RegistrationTests" name="verifyRegMFA_Validations" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegMFA_Validations -->
  <system-out/>
</testsuite> <!-- sew.ai.tests.scp.RegistrationTests -->
